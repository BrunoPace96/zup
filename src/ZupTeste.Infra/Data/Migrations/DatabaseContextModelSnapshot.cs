// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ZupTeste.Infra.Data.Context;

#nullable disable

namespace ZupTeste.Infra.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ZupTeste.Domain.Funcionarios.Funcionario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(512)");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LiderId")
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(512)");

                    b.Property<string>("NumeroChapa")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(512)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(512)");

                    b.HasKey("Id");

                    b.HasIndex("LiderId");

                    b.HasIndex("NumeroChapa")
                        .IsUnique();

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("ZupTeste.Domain.Funcionarios.Telefone", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("FuncionarioId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(512)");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Telefone");
                });

            modelBuilder.Entity("ZupTeste.Domain.Funcionarios.Funcionario", b =>
                {
                    b.HasOne("ZupTeste.Domain.Funcionarios.Funcionario", "Lider")
                        .WithMany("Funcionarios")
                        .HasForeignKey("LiderId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Lider");
                });

            modelBuilder.Entity("ZupTeste.Domain.Funcionarios.Telefone", b =>
                {
                    b.HasOne("ZupTeste.Domain.Funcionarios.Funcionario", "Funcionario")
                        .WithMany("Telefones")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("ZupTeste.Domain.Funcionarios.Funcionario", b =>
                {
                    b.Navigation("Funcionarios");

                    b.Navigation("Telefones");
                });
#pragma warning restore 612, 618
        }
    }
}
